/*
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

namespace myutilootor.src
{
	internal static class E { // enums
		// not actually an enum, but used in a similar way, so included here
		internal static readonly Dictionary<string, string> A_Type_To_UtlString = new() {
			                            ["A_None"] = "None",
			                ["A_Amuli_Coat_Chest"] = "Amuli Coat (Chest)",
			       ["A_Amuli_Coat_CollarShoulder"] = "Amuli Coat (Collar/Shoulder)",
			             ["A_Amuli_Coat_ArmsTrim"] = "Amuli Coat (Arms/Trim)",
			                 ["A_Amuli_Legs_Base"] = "Amuli Legs (Base)",
			                 ["A_Amuli_Legs_Trim"] = "Amuli Legs (Trim)",
			                     ["A_Celdon_Base"] = "Celdon (Base)",
			                    ["A_Celdon_Veins"] = "Celdon (Veins)",
			            ["A_Chiran_Coat_BaseArms"] = "Chiran Coat (Base/Arms)",
			             ["A_Chiran_Coat_Stripes"] = "Chiran Coat (Stripes)",
			               ["A_Chiran_Legs_Girth"] = "Chiran Legs (Girth)",
			                ["A_Chiran_Legs_Legs"] = "Chiran Legs (Legs)",
			                ["A_Chiran_Legs_Trim"] = "Chiran Legs (Trim)",
			               ["A_Chiran_Helm_Horns"] = "Chiran Helm (Horns)",
			                ["A_Chiran_Helm_Base"] = "Chiran Helm (Base)",
			               ["A_Haebrean_BP_Chest"] = "Haebrean BP (Chest) *",
			           ["A_Haebrean_BP_Ornaments"] = "Haebrean BP (Ornaments)",
			                ["A_Haebrean_BP_Trim"] = "Haebrean BP (Trim)",
			             ["A_Haebrean_Girth_Base"] = "Haebrean Girth (Base) *",
			       ["A_Haebrean_Girth_BeltScales"] = "Haebrean Girth (Belt/Scales)",
			              ["A_Haebrean_Helm_Base"] = "Haebrean Helm (Base)",
			              ["A_Haebrean_Helm_Mask"] = "Haebrean Helm (Mask)",
			         ["A_Haebrean_Pauldrons_Base"] = "Haebrean Pauldrons (Base) *",
			    ["A_Haebrean_Pauldrons_Ornaments"] = "Haebrean Pauldrons (Ornaments)",
			                 ["A_Lorica_BP_Veins"] = "Lorica BP (Veins)",
			                  ["A_Lorica_BP_Base"] = "Lorica BP (Base)",
			              ["A_Lorica_BP_NeckTrim"] = "Lorica BP (Neck/Trim) *",
			                ["A_Lorica_Legs_Base"] = "Lorica Legs (Base)",
			     ["A_Lorica_Legs_KneesBeltCrotch"] = "Lorica Legs (Knees/Belt/Crotch) *",
			                ["A_Lorica_Legs_Legs"] = "Lorica Legs (Legs) *",
			          ["A_Nariyid_BP_CircleLines"] = "Nariyid BP (Circle/Lines)",
			                 ["A_Nariyid_BP_Base"] = "Nariyid BP (Base)",
			            ["A_Nariyid_BP_Shoulders"] = "Nariyid BP (Shoulders)",
			              ["A_Nariyid_Girth_Base"] = "Nariyid Girth (Base) *",
			         ["A_Nariyid_Girth_BeltLines"] = "Nariyid Girth (Belt/Lines)",
			         ["A_Nariyid_Girth_Ornaments"] = "Nariyid Girth (Ornaments)",
			       ["A_Nariyid_Sleeves_Shoulders"] = "Nariyid Sleeves (Shoulders)",
			        ["A_Nariyid_Sleeves_UpperArm"] = "Nariyid Sleeves (Upper Arm)",
			        ["A_Nariyid_Sleeves_LowerArm"] = "Nariyid Sleeves (Lower Arm)",
			                  ["A_Olthoi_BP_Base"] = "Olthoi BP (Base)",
			                 ["A_Olthoi_BP_Veins"] = "Olthoi BP (Veins)",
			 ["A_Olthoi_Alduressa_Legs_GirthBase"] = "Olthoi Alduressa Legs (Girth: Base)",
			["A_Olthoi_Alduressa_Legs_GirthLines"] = "Olthoi Alduressa Legs (Girth: Lines)",
			 ["A_Olthoi_Alduressa_Legs_LegsLines"] = "Olthoi Alduressa Legs (Legs: Lines)",
			          ["A_Olthoi_Amuli_Coat_Base"] = "Olthoi Amuli Coat (Base) *",
			          ["A_Olthoi_Amuli_Coat_Trim"] = "Olthoi Amuli Coat (Trim)",
			     ["A_Olthoi_Amuli_Coat_Shoulders"] = "Olthoi Amuli Coat (Shoulders)",
			          ["A_Olthoi_Amuli_Legs_Trim"] = "Olthoi Amuli Legs (Trim)",
			      ["A_Olthoi_Koujia_Kabuton_Base"] = "Olthoi Koujia Kabuton (Base)",
			     ["A_Olthoi_Koujia_Kabuton_Horns"] = "Olthoi Koujia Kabuton (Horns)",
			         ["A_Olthoi_Koujia_Legs_Base"] = "Olthoi Koujia Legs (Base)",
			   ["A_Olthoi_Koujia_Legs_SidesShins"] = "Olthoi Koujia Legs (Sides/Shins)",
			          ["A_Scalemail_Cuirass_Base"] = "Scalemail Cuirass (Base)",
			         ["A_Scalemail_Cuirass_Bumps"] = "Scalemail Cuirass (Bumps)",
			          ["A_Scalemail_Cuirass_Belt"] = "Scalemail Cuirass (Belt)",
			         ["A_Tenassa_Legs_LineAtSide"] = "Tenassa Legs (Line at Side)",
			               ["A_Tenassa_Legs_Base"] = "Tenassa Legs (Base)",
			          ["A_Tenassa_Legs_Highlight"] = "Tenassa Legs (Hilight)",
			            ["A_Tenassa_BP_Shoulders"] = "Tenassa BP (Shoulders)",
			                 ["A_Tenassa_BP_Base"] = "Tenassa BP (Base)",
			              ["A_Yoroi_Cuirass_Base"] = "Yoroi Cuirass (Base)",
			              ["A_Yoroi_Cuirass_Belt"] = "Yoroi Cuirass (Belt)",
			                ["A_Yoroi_Girth_Base"] = "Yoroi Girth (Base)",
			                ["A_Yoroi_Girth_Belt"] = "Yoroi Girth (Belt)"
		};
        // reverse-lookup to A_Type_To_UtlString (above)
        internal static readonly Dictionary<string, string> UtlString_To_A_Type = new() {
			                                ["None"] = "A_None",
			                  ["Amuli Coat (Chest)"] = "A_Amuli_Coat_Chest",
			        ["Amuli Coat (Collar/Shoulder)"] = "A_Amuli_Coat_CollarShoulder",
			              ["Amuli Coat (Arms/Trim)"] = "A_Amuli_Coat_ArmsTrim",
			                   ["Amuli Legs (Base)"] = "A_Amuli_Legs_Base",
			                   ["Amuli Legs (Trim)"] = "A_Amuli_Legs_Trim",
			                       ["Celdon (Base)"] = "A_Celdon_Base",
			                      ["Celdon (Veins)"] = "A_Celdon_Veins",
			             ["Chiran Coat (Base/Arms)"] = "A_Chiran_Coat_BaseArms",
			               ["Chiran Coat (Stripes)"] = "A_Chiran_Coat_Stripes",
			                 ["Chiran Legs (Girth)"] = "A_Chiran_Legs_Girth",
			                  ["Chiran Legs (Legs)"] = "A_Chiran_Legs_Legs",
			                  ["Chiran Legs (Trim)"] = "A_Chiran_Legs_Trim",
			                 ["Chiran Helm (Horns)"] = "A_Chiran_Helm_Horns",
			                  ["Chiran Helm (Base)"] = "A_Chiran_Helm_Base",
			               ["Haebrean BP (Chest) *"] = "A_Haebrean_BP_Chest",
			             ["Haebrean BP (Ornaments)"] = "A_Haebrean_BP_Ornaments",
			                  ["Haebrean BP (Trim)"] = "A_Haebrean_BP_Trim",
			             ["Haebrean Girth (Base) *"] = "A_Haebrean_Girth_Base",
			        ["Haebrean Girth (Belt/Scales)"] = "A_Haebrean_Girth_BeltScales",
			                ["Haebrean Helm (Base)"] = "A_Haebrean_Helm_Base",
			                ["Haebrean Helm (Mask)"] = "A_Haebrean_Helm_Mask",
			         ["Haebrean Pauldrons (Base) *"] = "A_Haebrean_Pauldrons_Base",
			      ["Haebrean Pauldrons (Ornaments)"] = "A_Haebrean_Pauldrons_Ornaments",
			                   ["Lorica BP (Veins)"] = "A_Lorica_BP_Veins",
			                    ["Lorica BP (Base)"] = "A_Lorica_BP_Base",
			             ["Lorica BP (Neck/Trim) *"] = "A_Lorica_BP_NeckTrim",
			                  ["Lorica Legs (Base)"] = "A_Lorica_Legs_Base",
			   ["Lorica Legs (Knees/Belt/Crotch) *"] = "A_Lorica_Legs_KneesBeltCrotch",
			                ["Lorica Legs (Legs) *"] = "A_Lorica_Legs_Legs",
			           ["Nariyid BP (Circle/Lines)"] = "A_Nariyid_BP_CircleLines",
			                   ["Nariyid BP (Base)"] = "A_Nariyid_BP_Base",
			              ["Nariyid BP (Shoulders)"] = "A_Nariyid_BP_Shoulders",
			              ["Nariyid Girth (Base) *"] = "A_Nariyid_Girth_Base",
			          ["Nariyid Girth (Belt/Lines)"] = "A_Nariyid_Girth_BeltLines",
			           ["Nariyid Girth (Ornaments)"] = "A_Nariyid_Girth_Ornaments",
			         ["Nariyid Sleeves (Shoulders)"] = "A_Nariyid_Sleeves_Shoulders",
			         ["Nariyid Sleeves (Upper Arm)"] = "A_Nariyid_Sleeves_UpperArm",
			         ["Nariyid Sleeves (Lower Arm)"] = "A_Nariyid_Sleeves_LowerArm",
			                    ["Olthoi BP (Base)"] = "A_Olthoi_BP_Base",
			                   ["Olthoi BP (Veins)"] = "A_Olthoi_BP_Veins",
			 ["Olthoi Alduressa Legs (Girth: Base)"] = "A_Olthoi_Alduressa_Legs_GirthBase",
			["Olthoi Alduressa Legs (Girth: Lines)"] = "A_Olthoi_Alduressa_Legs_GirthLines",
			 ["Olthoi Alduressa Legs (Legs: Lines)"] = "A_Olthoi_Alduressa_Legs_LegsLines",
			          ["Olthoi Amuli Coat (Base) *"] = "A_Olthoi_Amuli_Coat_Base",
			            ["Olthoi Amuli Coat (Trim)"] = "A_Olthoi_Amuli_Coat_Trim",
			       ["Olthoi Amuli Coat (Shoulders)"] = "A_Olthoi_Amuli_Coat_Shoulders",
			            ["Olthoi Amuli Legs (Trim)"] = "A_Olthoi_Amuli_Legs_Trim",
			        ["Olthoi Koujia Kabuton (Base)"] = "A_Olthoi_Koujia_Kabuton_Base",
			       ["Olthoi Koujia Kabuton (Horns)"] = "A_Olthoi_Koujia_Kabuton_Horns",
			           ["Olthoi Koujia Legs (Base)"] = "A_Olthoi_Koujia_Legs_Base",
			    ["Olthoi Koujia Legs (Sides/Shins)"] = "A_Olthoi_Koujia_Legs_SidesShins",
			            ["Scalemail Cuirass (Base)"] = "A_Scalemail_Cuirass_Base",
			           ["Scalemail Cuirass (Bumps)"] = "A_Scalemail_Cuirass_Bumps",
			            ["Scalemail Cuirass (Belt)"] = "A_Scalemail_Cuirass_Belt",
			         ["Tenassa Legs (Line at Side)"] = "A_Tenassa_Legs_LineAtSide",
			                 ["Tenassa Legs (Base)"] = "A_Tenassa_Legs_Base",
			              ["Tenassa Legs (Hilight)"] = "A_Tenassa_Legs_Highlight",
			              ["Tenassa BP (Shoulders)"] = "A_Tenassa_BP_Shoulders",
			                   ["Tenassa BP (Base)"] = "A_Tenassa_BP_Base",
			                ["Yoroi Cuirass (Base)"] = "A_Yoroi_Cuirass_Base",
			                ["Yoroi Cuirass (Belt)"] = "A_Yoroi_Cuirass_Belt",
			                  ["Yoroi Girth (Base)"] = "A_Yoroi_Girth_Base",
			                  ["Yoroi Girth (Belt)"] = "A_Yoroi_Girth_Belt"
		};
		internal enum Salvage { // counts from 1 through 77, but is missing 3, 9, 56, 65, 72
			V_Agate = 10,
			V_Alabaster = 66,
			V_Amber = 11,
			V_Amethyst = 12,
			V_Aquamarine = 13,
			V_ArmoredilloHide = 53,
			V_Azurite = 14,
			V_BlackGarnet = 15,
			V_BlackOpal = 16,
			V_Bloodstone = 17,
			V_Brass = 57,
			V_Bronze = 58,
			V_Carnelian = 18,
			V_Ceramic = 1,
			V_Citrine = 19,
			V_Copper = 59,
			V_Diamond = 20,
			V_Ebony = 73,
			V_Emerald = 21,
			V_FireOpal = 22,
			V_Gold = 60,
			V_Granite = 67,
			V_GreenGarnet = 23,
			V_GreenJade = 24,
			V_GromnieHide = 54,
			V_Hematite = 25,
			V_ImperialTopaz = 26,
			V_Iron = 61,
			V_Ivory = 51,
			V_Jet = 27,
			V_LapisLazuli = 28,
			V_LavenderJade = 29,
			V_Leather = 52,
			V_Linen = 4,
			V_Mahogany = 74,
			V_Malachite = 30,
			V_Marble = 68,
			V_Moonstone = 31,
			V_Oak = 75,
			V_Obsidian = 69,
			V_Onyx = 32,
			V_Opal = 33,
			V_Peridot = 34,
			V_Pine = 76,
			V_Porcelain = 2,
			V_Pyreal = 62,
			V_RedGarnet = 35,
			V_RedJade = 36,
			V_ReedSharkHide = 55,
			V_RoseQuartz = 37,
			V_Ruby = 38,
			V_Sandstone = 70,
			V_Sapphire = 39,
			V_Satin = 5,
			V_Serpentine = 71,
			V_Silk = 6,
			V_Silver = 63,
			V_SmokeyQuartz = 40,
			V_Steel = 64,
			V_Sunstone = 41,
			V_Teak = 77,
			V_TigerEye = 42,
			V_Tourmaline = 43,
			V_Turquoise = 44,
			V_Velvet = 7,
			V_WhiteJade = 45,
			V_WhiteQuartz = 46,
			V_WhiteSapphire = 47,
			V_Wool = 8,
			V_YellowGarnet = 48,
			V_YellowTopaz = 49,
			V_Zircon = 50
		};
		internal enum MatchActsOn { // things acted on by requirement type 1 (String Value Match)
			M_DateBorn = 43,
			M_FellowshipName = 10,
			M_FullDescription = 16,
			M_ImbuedBy = 40,
			M_InscribedBy = 8,
			M_Inscription = 7,
			M_LastTinkeredBy = 39,
			M_MonarchName = 21,
			M_Name = 1,
			M_OnlyActivatedBy = 25,
			M_Patron = 35,
			M_PortalDestination = 38,
			M_SecondaryName = 184549376,
			M_SimpleDescription = 15,
			M_Title = 5,
			M_UsageInstructions = 14
		};
		internal enum LongActsOn { // things acted on by requirement types 2, 3, 11, 12, and 13 (Long Value Key <=|>=|Has Flags|==|!=), and a subset (*) by type 2003 (Buffed Long Value Key >=)
			L_ActivationReqSkillId = 176,
			L_ActiveSpellCount = 218103848,
			L_AffectsVitalAmt = 90,
			L_AffectsVitalId = 89,
			L_Age = 125,
			L_ArmorLevel = 28,                  // *
			L_ArmorSetID = 265,
			L_AssociatedSpell = 218103816,
			L_Attuned = 114,
			L_Behavior = 218103835,
			L_Bonded = 33,
			L_Burden = 5,
			L_Category = 218103834,
			L_CloakChanceType = 352,
			L_Container = 218103810,
			L_CooldownSeconds = 167,
			L_Coverage = 218103821,
			L_CreateFlags1 = 218103832,
			L_CreateFlags2 = 218103833,
			L_CreatureLevel = 25,
			L_CritDamRating = 374,
			L_CritDamResistRating = 375,
			L_CritRating = 372,
			L_CritResistRating = 373,
			L_CurrentMana = 107,
			L_DamageType = 218103841,
			L_DamRating = 370,
			L_DamResistRating = 371,
			L_DateOfBirth = 98,
			L_Deaths = 43,
			L_DescriptionFormat = 172,
			L_ElementalDmgBonus = 204,
			L_EquipableSlots = 218103822,
			L_EquippedSlots = 10,
			L_EquipSkill = 218103840,
			L_EquipType = 218103823,
			L_FishingSkill = 192,
			L_Flags = 218103831,
			L_GemSettingQty = 177,
			L_GemSettingType = 178,
			L_Gender = 113,
			L_HealBoostRating = 376,
			L_Heritage = 188,
			L_HookMask = 218103828,
			L_HookType = 218103829,
			L_HouseOwner = 218103827,
			L_Icon = 218103809,
			L_IconOutline = 218103824,
			L_IconOverlay = 218103849,
			L_IconUnderlay = 218103850,
			L_Imbued = 179,
			L_ItemMaxLevel = 319,
			L_ItemSlots = 218103812,
			L_KeysHeld = 193,
			L_Landblock = 218103811,
			L_LockpickDifficulty = 38,
			L_LockpickSkillBonus = 88,
			L_LoreRequirement = 109,
			L_MagicDef = 218103836,
			L_ManaCost = 117,
			L_Material = 131,
			L_MaxDamage = 218103842,            // *
			L_MaximumMana = 108,
			L_MaxLevelRestrict = 87,
			L_MinLevelRestrict = 86,
			L_MissileType = 218103825,
			L_Model = 218103830,
			L_Monarch = 218103820,
			L_NumberFollowers = 35,
			L_NumberItemsSalvaged = 170,
			L_NumberTimesTinkered = 171,
			L_PackSlots = 218103813,
			L_PagesTotal = 175,
			L_PagesUsed = 174,
			L_PhysicsDataFlags = 218103847,
			L_PortalRestrictions = 111,
			L_Rank = 30,
			L_RankRequirement = 110,
			L_RareId = 17,
			L_RestrictedToToD = 26,
			L_SkillCreditsAvail = 24,
			L_SkillLevelReq = 115,
			L_SlayerSpecies = 166,
			L_Slot = 218103817,
			L_SpecialProps = 218103837,
			L_Species = 2,
			L_SpellCount = 218103838,
			L_Spellcraft = 106,
			L_StackCount = 218103814,
			L_StackMax = 218103815,
			L_SummoningGemBuffed = 367,
			L_SummoningGemLevel = 369,
			L_TotalValue = 20,
			L_Type = 218103808,
			L_Unenchantable = 36,
			L_Unknown10 = 218103843,
			L_Unknown100000 = 218103844,
			L_Unknown800000 = 218103845,
			L_Unknown8000000 = L_Unknown800000, // 218103845,
			L_UsageMask = 218103826,
			L_UsesRemaining = 92,
			L_UsesTotal = 91,
			L_Value = 19,
			L_VitalityRating = 379,
			L_WandElemDmgType = 45,
			L_WeaponMasteryCategory = 353,
			L_WeapSpeed = 218103839,
			L_Wielder = 218103818,
			L_WieldingSlot = 218103819,
			L_WieldReqAttribute = 159,
			L_WieldReqType = 158,
			L_WieldReqValue = 160,
			L_Workmanship = 105,
			L_XPForVPReduction = 129
		};
		internal enum DoubleActsOn { // things acted on by requirement types 4 and 5 (Double Value Key <=|>=), and a subset (*) by type 2005 (Buffed Double Value Key >=)
			D_AcidProt = 167772163,
			D_ApproachDistance = 167772168,
			D_AttackBonus = 167772172,          // *
			D_BludgeonProt = 167772162,
			D_ColdProt = 167772166,
			D_DamageBonus = 167772174,
			D_ElementalDamageVersus = 152,      // *
			D_FireProt = 167772165,
			D_Heading = 167772167,
			D_HealingKitRestoreBonus = 100,
			D_LightningProt = 167772164,
			D_MagicDBonus = 150,
			D_ManaCBonus = 144,                 // *
			D_ManaRateOfChange = 5,
			D_ManaStoneChanceDestruct = 137,
			D_ManaTransferEfficiency = 87,
			D_MeleeDefenseBonus = 29,           // *
			D_MissileDBonus = 149,
			D_PierceProt = 167772161,
			D_Range = 167772173,
			D_SalvageWorkmanship = 167772169,
			D_Scale = 167772170,
			D_SlashProt = 167772160,
			D_Variance = 167772171
		};
		internal enum Skill { // things acted on by requirement types 1000 and 1004 (Character Buffed Skill and Base Skill Range)
			S_Alchemy = 38,
			S_ArcaneLore = 14,
			S_ArmorTinkering = 29,
			S_AssessCreature = 27,
			S_AssessPerson = 19,
			S_Axe = 1,
			S_Bow = 2,
			S_Cooking = 39,
			S_CreatureEnchantment = 31,
			S_Crossbow = 3,
			S_Dagger = 4,
			S_Deception = 20,
			S_DirtyFighting = 52,
			S_DualWield = 49,
			S_FinesseWeapons = 46,
			S_Fletching = 37,
			S_Gearcraft = 42,
			S_Healing = 21,
			S_HeavyWeapons = 44,
			S_ItemEnchantment = 32,
			S_ItemTinkering = 18,
			S_Jump = 22,
			S_Leadership = 35,
			S_LifeMagic = 33,
			S_LightWeapons = 45,
			S_Lockpick = 23,
			S_Loyalty = 36,
			S_Mace = 5,
			S_MagicDefense = 15,
			S_MagicItemTinkering = 30,
			S_ManaConversion = 16,
			S_MeleeDefense = 6,
			S_MissileDefense = 7,
			S_MissileWeapons = 47,
			S_Recklessness = 50,
			S_Run = 24,
			S_Salvaging = 40,
			S_Shield = 48,
			S_SneakAttack = 51,
			S_Spear = 9,
			S_Staff = 10,
			S_Summoning = 54,
			S_Sword = 11,
			S_ThrownWeapons = 12,
			S_TwoHandedCombat = 41,
			S_Unarmed = 13,
			S_VoidMagic = 43,
			S_WarMagic = 34,
			S_WeaponTinkering = 28
		};
		internal enum ObjectClass { // things acted on by requirement type 7 (ObjectClass)
			C_Armor = 2,
			C_BaseAlchemy = 19,
			C_BaseCooking = 18,
			C_BaseFletching = 20,
			C_Book = 33,
			C_Bundle = 32,
			C_Clothing = 3,
			C_Container = 10,
			C_Corpse = 27,
			C_CraftedAlchemy = 22,
			C_CraftedCooking = 21,
			C_CraftedFletching = 23,
			C_Door = 26,
			C_Foci = 38,
			C_Food = 6,
			C_Gem = 11,
			C_HealingKit = 29,
			C_Housing = 36,
			C_Jewelry = 4,
			C_Journal = 34,
			C_Key = 13,
			C_Lifestone = 28,
			C_Lockpick = 30,
			C_ManaStone = 16,
			C_MeleeWeapon = 1,
			C_Misc = 8,
			C_MissileWeapon = 9,
			C_Money = 7,
			C_Monster = 5,
			C_Npc = 37,
			C_Plant = 17,
			C_Player = 24,
			C_Portal = 14,
			C_Salvage = 39,
			C_Scroll = 42,
			C_Services = 41,
			C_Sign = 35,
			C_SpellComponent = 12,
			C_TradeNote = 15,
			C_Unknown = 0,
			C_Ust = 40,
			C_Vendor = 25,
			C_WandStaffOrb = 31
		};
		internal enum Requirement { // all the various requirements that can appear in a loot rule
			ArmorColorLike = 15,
			BaseSkillRange = 1004,
			BuffedSkillGE = 1000,
			CalcedBuffedMedianDmgGE = 2000,
			CalcedBuffedMissileDmgGE = 2001,
			CalcedBuffedTinkDmgGE = 2006,
			CalcedBuffedTinkTarget = 2008,
			CalcedTotalRatingsGE = 2007,
			CharLevelGE = 1002,
			CharLevelLE = 1003,
			ColorLike = 14,
			DKeyBuffedGE = 2005,
			DKeyGE = 5,
			DKeyLE = 4,
			DmgPercentGE = 6,
			EmptyMainPackSlotsGE = 1001,
			LKeyBuffedGE = 2003,
			LKeyE = 12,
			LKeyFlags = 11,
			LKeyGE = 3,
			LKeyLE = 2,
			LKeyNE = 13,
			MatchRx = 1,
			MinDmgGE = 10,
			NSpellsGE = 8,
			NSpellsRxGE = 9,
			ObjClass = 7,
			SlotPalette = 17,
			SlotColorLike = 16,
			SpellRx = 0,
			Disabled = 9999         // special one (ON: and NO:)
		};
		internal enum Action { // all the available actions that can be taken in response to a loot rule matching
			Keep = 1,
			Salvage = 2,
			Sell = 3,
			Read = 4,
			KeepN = 10      // special case
		};
	}
}
